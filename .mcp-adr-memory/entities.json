[
  {
    "id": "e4997433-1311-4090-964f-4c781cdb7f33",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "Test ADR Entity",
    "description": "A test architectural decision",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "7cda162e-5bc3-4d2e-bb07-b4a044b4de15",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.8,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created knowledge_artifact entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "knowledge_artifact",
    "title": "Original Title",
    "description": "Original description",
    "artifactData": {
      "artifactType": "documentation",
      "content": "Test content",
      "format": "markdown",
      "sourceReliability": 0.8,
      "applicabilityScope": ["backend", "api"],
      "keyInsights": ["Key insight 1", "Key insight 2"],
      "actionableItems": [
        {
          "action": "Update documentation",
          "priority": "medium",
          "timeframe": "1 week",
          "dependencies": []
        }
      ]
    }
  },
  {
    "id": "bd555346-6282-478a-8467-3b898aabc828",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.85,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created code_component entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "code_component",
    "title": "Test Component",
    "description": "Test description",
    "componentData": {
      "filePath": "/src/components/TestComponent.ts",
      "componentType": "class",
      "language": "TypeScript",
      "size": {
        "lines": 150,
        "complexity": 5,
        "dependencies": 3
      },
      "qualityMetrics": {
        "maintainability": 0.8,
        "testCoverage": 0.9,
        "performance": 0.85,
        "security": 0.9
      },
      "architecturalRole": "Business logic component",
      "businessValue": "Core functionality implementation",
      "technicalDebt": [],
      "dependencies": ["lodash", "react"],
      "publicInterface": ["render", "update"],
      "changeFrequency": "medium",
      "riskProfile": {
        "technicalRisk": "low",
        "businessRisk": "medium",
        "changeRisk": "low",
        "mitigationStrategies": ["Unit testing", "Code review"]
      }
    }
  },
  {
    "id": "54884740-4ad1-41b5-b0cc-369e9417ff49",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "Test ADR",
    "description": "Test description",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "49a94507-8e2f-4cc3-9a0d-e8c0a2f472ef",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.8,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created knowledge_artifact entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "knowledge_artifact",
    "title": "Original",
    "description": "Original description",
    "artifactData": {
      "artifactType": "documentation",
      "content": "Test content",
      "format": "markdown",
      "sourceReliability": 0.8,
      "applicabilityScope": ["backend", "api"],
      "keyInsights": ["Key insight 1", "Key insight 2"],
      "actionableItems": [
        {
          "action": "Update documentation",
          "priority": "medium",
          "timeframe": "1 week",
          "dependencies": []
        }
      ]
    }
  },
  {
    "id": "22182843-ff4a-4c06-829f-7e8f99ff6a56",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "Test ADR",
    "description": "Test description",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "eb1c19a2-b210-4b30-99f2-d3a5d7b26073",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.85,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created code_component entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "code_component",
    "title": "Test Component",
    "description": "Test description",
    "componentData": {
      "filePath": "/src/components/TestComponent.ts",
      "componentType": "class",
      "language": "TypeScript",
      "size": {
        "lines": 150,
        "complexity": 5,
        "dependencies": 3
      },
      "qualityMetrics": {
        "maintainability": 0.8,
        "testCoverage": 0.9,
        "performance": 0.85,
        "security": 0.9
      },
      "architecturalRole": "Business logic component",
      "businessValue": "Core functionality implementation",
      "technicalDebt": [],
      "dependencies": ["lodash", "react"],
      "publicInterface": ["render", "update"],
      "changeFrequency": "medium",
      "riskProfile": {
        "technicalRisk": "low",
        "businessRisk": "medium",
        "changeRisk": "low",
        "mitigationStrategies": ["Unit testing", "Code review"]
      }
    }
  },
  {
    "id": "7118286c-f657-4889-8f76-cf15426991c8",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.8,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created knowledge_artifact entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "knowledge_artifact",
    "title": "Test Artifact",
    "description": "Test description",
    "artifactData": {
      "artifactType": "documentation",
      "content": "Test content",
      "format": "markdown",
      "sourceReliability": 0.8,
      "applicabilityScope": ["backend", "api"],
      "keyInsights": ["Key insight 1", "Key insight 2"],
      "actionableItems": [
        {
          "action": "Update documentation",
          "priority": "medium",
          "timeframe": "1 week",
          "dependencies": []
        }
      ]
    }
  },
  {
    "id": "41609a50-6b86-4085-a9e6-fa407a7e5da5",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "ADR 1",
    "description": "Description 1",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "e6f76e0d-1d75-44b4-bd17-540b8ebd1071",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "ADR 1",
    "description": "First ADR",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "d03d60a8-69ed-4596-8a8e-71b03ae73d5a",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "ADR 1",
    "description": "First ADR",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "023c93cc-903a-48d3-b933-0e1aa73c91aa",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "ADR 1",
    "description": "First ADR",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "60a34755-30b8-45ec-9670-3a72b56831dc",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "ADR 1",
    "description": "First ADR",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "1f538141-8978-4175-96d9-b82e6d39b67f",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "ADR 1",
    "description": "First ADR",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "04cd764e-55f9-4ecd-b618-77f5ad93f84f",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "eb447b3e-e0e3-4e79-9f45-907955f193e3",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "60443d46-55ae-4a17-bcb5-9cf00d05cefb",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "e987a4b6-e21d-4f5f-80fd-c21f8427a3c7",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "f9c53372-c02b-46b4-a411-a2da99e68604",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "4876847d-daa6-4722-9a81-50d7c4c36d80",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "179c20e5-c654-49c4-af38-d86366d2b92f",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "063abb60-6450-43fe-8485-1842630de2dd",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "5982dd04-dc56-4df6-8984-d1a5faab2f3d",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "a5d55416-d18a-41e8-87f8-d955199a849e",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "cb231889-fd5c-42e7-a31d-64bb5d5122d8",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "5e607092-58cb-4df1-82c6-bf866517bd8f",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "75c42fe8-bf7b-4b31-bc16-8733bf913cbc",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.8,
    "tags": ["frontend", "react"],
    "relationships": [],
    "context": {
      "projectPhase": "design",
      "businessDomain": "ecommerce",
      "technicalStack": ["react", "typescript"],
      "environmentalFactors": ["web"],
      "stakeholders": ["development-team"]
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "React Architecture",
    "description": "Decision to use React for frontend",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "ebbf46d0-6537-47f4-bb7d-cc4961ddd1d7",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "Test ADR",
    "description": "Test description",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "11b59e33-83d0-4c5a-b8b1-60fb3cd2b105",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.3,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created knowledge_artifact entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "knowledge_artifact",
    "title": "Low Confidence Artifact",
    "description": "Test description",
    "artifactData": {
      "artifactType": "documentation",
      "content": "Test content",
      "format": "markdown",
      "sourceReliability": 0.8,
      "applicabilityScope": ["backend", "api"],
      "keyInsights": ["Key insight 1", "Key insight 2"],
      "actionableItems": [
        {
          "action": "Update documentation",
          "priority": "medium",
          "timeframe": "1 week",
          "dependencies": []
        }
      ]
    }
  },
  {
    "id": "7fb122f4-7cce-4693-a7ef-9aecfe2fe062",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.8,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "Test ADR",
    "description": "Test description",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "9e2c9d57-b5de-4434-8aab-a82e8f54c9cd",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.8,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "Test ADR",
    "description": "Test description",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "b46baecc-48ff-49e9-ba95-2520f0eaa51a",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "Test ADR",
    "description": "Test description",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  },
  {
    "id": "e4b4e730-0dfd-4500-bfdd-c011f3f1912a",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.8,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created knowledge_artifact entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "knowledge_artifact",
    "title": "Test Artifact",
    "description": "Test description",
    "artifactData": {
      "artifactType": "documentation",
      "content": "Test content",
      "format": "markdown",
      "sourceReliability": 0.8,
      "applicabilityScope": ["backend", "api"],
      "keyInsights": ["Key insight 1", "Key insight 2"],
      "actionableItems": [
        {
          "action": "Update documentation",
          "priority": "medium",
          "timeframe": "1 week",
          "dependencies": []
        }
      ]
    }
  },
  {
    "id": "dbcf4d1b-efb4-49cb-8b2b-2e2766b00874",
    "created": "2024-01-01T00:00:00.000Z",
    "lastModified": "2024-01-01T00:00:00.000Z",
    "version": 1,
    "confidence": 0.9,
    "relevance": 0.7,
    "tags": [],
    "relationships": [],
    "context": {
      "technicalStack": [],
      "environmentalFactors": [],
      "stakeholders": []
    },
    "accessPattern": {
      "lastAccessed": "2024-01-01T00:00:00.000Z",
      "accessCount": 1,
      "accessContext": []
    },
    "evolution": {
      "origin": "discovered",
      "transformations": [
        {
          "timestamp": "2024-01-01T00:00:00.000Z",
          "type": "created",
          "description": "Created architectural_decision entity",
          "agent": "MemoryEntityManager"
        }
      ]
    },
    "validation": {
      "isVerified": false
    },
    "type": "architectural_decision",
    "title": "Test ADR",
    "description": "Test description",
    "decisionData": {
      "status": "proposed",
      "context": "We are building a microservices architecture and need to select a database technology for high-availability requirements.",
      "decision": "We will use PostgreSQL as our primary database technology for the microservices architecture.",
      "consequences": {
        "positive": [
          "Strong ACID compliance",
          "Rich query capabilities",
          "Excellent ecosystem support"
        ],
        "negative": ["More complex horizontal scaling", "Higher operational overhead"],
        "risks": ["Single point of failure if not properly clustered", "Learning curve for team"]
      },
      "alternatives": [
        {
          "name": "PostgreSQL",
          "description": "Relational database with strong consistency",
          "tradeoffs": "Strong consistency vs horizontal scalability"
        },
        {
          "name": "MongoDB",
          "description": "Document database with flexible schema",
          "tradeoffs": "Flexibility vs consistency guarantees"
        }
      ],
      "implementationStatus": "not_started",
      "implementationTasks": ["Setup database cluster", "Configure connection pooling"],
      "reviewHistory": []
    }
  }
]
