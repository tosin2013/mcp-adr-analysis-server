<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="44" failures="1" errors="0" time="0.633">
  <testsuite name="MemoryEntityManager" errors="0" failures="1" skipped="43" timestamp="2025-09-16T02:09:46" time="0.405" tests="44">
    <testcase classname="MemoryEntityManager initialization should initialize successfully with empty memory" name="MemoryEntityManager initialization should initialize successfully with empty memory" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager initialization should create memory directory if it does not exist" name="MemoryEntityManager initialization should create memory directory if it does not exist" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager initialization should load existing entities from persistence" name="MemoryEntityManager initialization should load existing entities from persistence" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager initialization should handle initialization errors gracefully" name="MemoryEntityManager initialization should handle initialization errors gracefully" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management upsertEntity should create a new entity with all required fields" name="MemoryEntityManager entity management upsertEntity should create a new entity with all required fields" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management upsertEntity should update an existing entity" name="MemoryEntityManager entity management upsertEntity should update an existing entity" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management upsertEntity should apply default values correctly" name="MemoryEntityManager entity management upsertEntity should apply default values correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management upsertEntity should validate entity schema" name="MemoryEntityManager entity management upsertEntity should validate entity schema" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management upsertEntity should track evolution for new entities" name="MemoryEntityManager entity management upsertEntity should track evolution for new entities" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management upsertEntity should track evolution for updated entities" name="MemoryEntityManager entity management upsertEntity should track evolution for updated entities" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management getEntity should retrieve an existing entity" name="MemoryEntityManager entity management getEntity should retrieve an existing entity" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management getEntity should return null for non-existent entity" name="MemoryEntityManager entity management getEntity should return null for non-existent entity" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management getEntity should update access pattern when retrieving entity" name="MemoryEntityManager entity management getEntity should update access pattern when retrieving entity" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management deleteEntity should delete an existing entity" name="MemoryEntityManager entity management deleteEntity should delete an existing entity" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management deleteEntity should return false for non-existent entity" name="MemoryEntityManager entity management deleteEntity should return false for non-existent entity" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager entity management deleteEntity should remove related relationships when deleting entity" name="MemoryEntityManager entity management deleteEntity should remove related relationships when deleting entity" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager relationship management upsertRelationship should create a new relationship" name="MemoryEntityManager relationship management upsertRelationship should create a new relationship" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager relationship management upsertRelationship should apply default values for optional fields" name="MemoryEntityManager relationship management upsertRelationship should apply default values for optional fields" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager relationship management upsertRelationship should fail when source entity does not exist" name="MemoryEntityManager relationship management upsertRelationship should fail when source entity does not exist" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager relationship management upsertRelationship should fail when target entity does not exist" name="MemoryEntityManager relationship management upsertRelationship should fail when target entity does not exist" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager relationship management upsertRelationship should update entity relationships" name="MemoryEntityManager relationship management upsertRelationship should update entity relationships" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying queryEntities should return all entities with default query" name="MemoryEntityManager querying queryEntities should return all entities with default query" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying queryEntities should filter by entity types" name="MemoryEntityManager querying queryEntities should filter by entity types" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying queryEntities should filter by tags" name="MemoryEntityManager querying queryEntities should filter by tags" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying queryEntities should filter by text query" name="MemoryEntityManager querying queryEntities should filter by text query" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying queryEntities should filter by confidence threshold" name="MemoryEntityManager querying queryEntities should filter by confidence threshold" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying queryEntities should filter by context filters" name="MemoryEntityManager querying queryEntities should filter by context filters" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying queryEntities should sort entities correctly" name="MemoryEntityManager querying queryEntities should sort entities correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying queryEntities should limit results" name="MemoryEntityManager querying queryEntities should limit results" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying queryEntities should include aggregations" name="MemoryEntityManager querying queryEntities should include aggregations" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying findRelatedEntities should find directly related entities" name="MemoryEntityManager querying findRelatedEntities should find directly related entities" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying findRelatedEntities should find entities at multiple depths" name="MemoryEntityManager querying findRelatedEntities should find entities at multiple depths" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying findRelatedEntities should respect maxDepth parameter" name="MemoryEntityManager querying findRelatedEntities should respect maxDepth parameter" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager querying findRelatedEntities should filter by relationship types" name="MemoryEntityManager querying findRelatedEntities should filter by relationship types" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager intelligence should initialize default intelligence" name="MemoryEntityManager intelligence should initialize default intelligence" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager intelligence should update intelligence when entities are modified" name="MemoryEntityManager intelligence should update intelligence when entities are modified" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager intelligence should generate recommendations based on current state" name="MemoryEntityManager intelligence should generate recommendations based on current state" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager snapshots should create a memory snapshot" name="MemoryEntityManager snapshots should create a memory snapshot" time="0.023">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;test-uuid-123&quot;
Received: &quot;42e7bbd2-9add-492e-a189-09f7ff8064b6&quot;
    at Object.&lt;anonymous&gt; (/home/runner/work/mcp-adr-analysis-server/mcp-adr-analysis-server/tests/utils/memory-entity-manager.test.ts:905:27)</failure>
    </testcase>
    <testcase classname="MemoryEntityManager snapshots should include intelligence in snapshot" name="MemoryEntityManager snapshots should include intelligence in snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager persistence should persist data when snapshot frequency is reached" name="MemoryEntityManager persistence should persist data when snapshot frequency is reached" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager persistence should handle persistence errors gracefully" name="MemoryEntityManager persistence should handle persistence errors gracefully" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager error handling should handle invalid entity data" name="MemoryEntityManager error handling should handle invalid entity data" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager error handling should handle query errors gracefully" name="MemoryEntityManager error handling should handle query errors gracefully" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MemoryEntityManager error handling should handle relationship creation with missing entities" name="MemoryEntityManager error handling should handle relationship creation with missing entities" time="0">
      <skipped/>
    </testcase>
  </testsuite>
</testsuites>