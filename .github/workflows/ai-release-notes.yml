name: AI-Enhanced Release Notes
on:
  push:
    tags: ['v*']
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to generate release notes for'
        required: false
        default: 'latest'

jobs:
  generate-notes:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
    permissions:
      contents: write
      pull-requests: write
      actions: write
      issues: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            VERSION="${{ github.ref_name }}"
          elif [ "${{ github.event.inputs.version }}" != "" ] && [ "${{ github.event.inputs.version }}" != "latest" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v2.1.0")
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "Using version: ${VERSION}"
      
      - name: Update package.json version
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          # Remove 'v' prefix if present
          VERSION_NO_V="${VERSION#v}"
          # Update package.json with the new version
          npm version "${VERSION_NO_V}" --no-git-tag-version --allow-same-version
          echo "Updated package.json to version ${VERSION_NO_V}"
      
      - name: Commit version update
        run: |
          VERSION_NO_V="${{ steps.version.outputs.VERSION }}"
          VERSION_NO_V="${VERSION_NO_V#v}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git diff --staged --quiet || git commit -m "chore: update version to ${VERSION_NO_V} [skip ci]"
          git push origin HEAD:main || echo "Version update commit failed (may already be up to date)"
      
      - name: Generate AI Release Notes
        run: npx tsx scripts/ai-release-notes.ts
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          RELEASE_NOTES_MODEL: gpt-4
          RELEASE_STYLE: comprehensive
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Release ${{ steps.version.outputs.VERSION }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: false
          generate_release_notes: true
      
  publish:
    needs: generate-notes
    uses: ./.github/workflows/publish.yml
    with:
      version: ${{ needs.generate-notes.outputs.version }}
    secrets: inherit
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
